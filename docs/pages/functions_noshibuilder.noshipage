<h1 id="noshi-builder">Noshi Builder</h1>
<p class="np">This tool is used to build a different type of components. To initialize it, we need to create a new variable that contains the <b>Noshi Builder</b>.</p>
<code class="ncode" data-target="js" data-code="
var nb = new NoshiBuilder();
"></code>
<space></space>
<h3 id="select">Select</h3>
<p class="np">To create a <code>select</code> tag, we need to pass some information as an object to <b>Noshi Builder</b> that are needed to build the tag. The table below will show the name of the info (object key), it's typed, and if it is required or optional.</p>
<div class="dcode">
    <table class="table-head center">
        <tr>
            <th class="w20">Name</th>
            <th class="w20">Type</th>
            <th class="w20">Values</th>
            <th class="w20">Default Value</th>
            <th class="w10">R/O</th>
        </tr>
        <tr>
            <td><code>id</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>name</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>class</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>select</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>options</code></td>
            <td>array</td>
            <td>[string], [number], [mix]</td>
            <td>empty</td>
            <td>required</td>
        </tr>
        <tr>
            <td><code>sort</code></td>
            <td>string</td>
            <td>"", "az", "za"</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>mode</code></td>
            <td>string</td>
            <td>"", "index"</td>
            <td>empty</td>
            <td>optional (return options with value equal to index)</td>
        </tr>
        <tr>
            <td><code>value</code></td>
            <td>string</td>
            <td>"", string of the selected value</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>disabled</code></td>
            <td>boolean</td>
            <td>true, false</td>
            <td>false</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>required</code></td>
            <td>boolean</td>
            <td>true, false</td>
            <td>false</td>
            <td>optional</td>
        </tr>
    </table>
</div>
<p class="np">For example, to build a <code>select</code> tag with id (list-of-colors) that contains 4 options (Green, Red, Yellow, Blue) and sorted ascending with the selected value of the Green option, the code will be as shown below.</p>
<code class="ncode" data-target="js" data-code="
var nb = new NoshiBuilder();
var selectTag = nb.select({
    id: 'list-of-colors',
    options: ['Green', 'Red', 'Yellow', 'Blue'],
    sort: 'az',
    value: 'Green'
});
"></code>
<div class="dcode">
    <select id='list-of-colors' value='Green' class='select'>
        <option value='Blue'>Blue</option>
        <option value='Green' selected='selected'>Green</option>
        <option value='Red'>Red</option>
        <option value='Yellow'>Yellow</option>
    </select>
</div>
<p class="np">The variable <code>selectTag</code> will contain the code below.</p>
<code class="ncode" data-target="html" data-code="
<select id='list-of-colors' value='Green' class='select'>
    <option value='Blue'>Blue</option>
    <option value='Green' selected='selected'>Green</option>
    <option value='Red'>Red</option>
    <option value='Yellow'>Yellow</option>
</select>
"></code>
<p class="np">However, to show the <code>selectTag</code> you have to append it as a child into your tag. For example, if we want to append it inside the body tag of the page we should write the code below.</p>
<code class="ncode" data-target="js" data-code="
document.body.appendChild(selectTag);
"></code>
<space></space>
<h3 id="input">Input</h3>
<p class="np">This part is used to create an <code>input</code> tag by passing specific information as an object to it. The table below will show the name of the info (object key), it's typed, and if it is required or optional.</p>
<div class="dcode">
    <table class="table-head center">
        <tr>
            <th class="w20">Name</th>
            <th class="w20">Type</th>
            <th class="w20">Values</th>
            <th class="w20">Default Value</th>
            <th class="w10">R/O</th>
        </tr>
        <tr>
            <td><code>id</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional (required with radio and checkbox types)</td>
        </tr>
        <tr>
            <td><code>name</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>class</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>select</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>type</code></td>
            <td>string</td>
            <td>text, password, number, radio, checkbox, date, email</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>text</code></td>
            <td>string</td>
            <td>label value</td>
            <td>empty</td>
            <td>optional (required with radio and checkbox)</td>
        </tr>
        <tr>
            <td><code>value</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>disabled</code></td>
            <td>boolean</td>
            <td>true, false</td>
            <td>false</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>required</code></td>
            <td>boolean</td>
            <td>true, false</td>
            <td>false</td>
            <td>optional</td>
        </tr>
        <tr>
            <td><code>placeholder</code></td>
            <td>string</td>
            <td>"", string</td>
            <td>empty</td>
            <td>optional</td>
        </tr>
    </table>
</div>
<p class="np">For example, to build a simple form inside a div tag with id <code>simple-form</code> and class <code>column</code>, which contains an email, username, password, and gender fields, the code will be as below.</p>
<code class="ncode" data-target="js" data-code="
var nb = new NoshiBuilder();
var email = nb.input({
    type: 'email',
    text: 'Email Address',
    placeholder: 'example@example.com',
    required: true
});
var username = nb.input({
    text: 'Username',
    placeholder: 'write a username',
    required: true
});
var password = nb.input({
    type: 'password',
    text: 'Password',
    placeholder: 'at least 8 characters',
    required: true
});
var male = nb.input({
    type: 'radio',
    text: 'Male',
    name: 'gender',
    id: 'male-gender'
});
var female = nb.input({
    type: 'radio',
    text: 'Female',
    name: 'gender',
    id: 'female-gender'
});
document.getElementById('simple-form').appendChild(email);
document.getElementById('simple-form').appendChild(username);
document.getElementById('simple-form').appendChild(password);
document.getElementById('simple-form').appendChild(male);
document.getElementById('simple-form').appendChild(female);
"></code>
<div class="dcode">
    <div id="simple-form" class="column"><input type="email" placeholder="example@example.com" required="required" class="input"><input placeholder="write a username" required="required" class="input"><input type="password" placeholder="at least 8 characters" required="required" class="input"><div class="input-holder"><label for="male-gender" class="input-label">Male</label><input type="radio" name="gender" id="male-gender" class="input-radio"></div><div class="input-holder"><label for="female-gender" class="input-label">Female</label><input type="radio" name="gender" id="female-gender" class="input-radio"></div></div>
</div>
<div id="simple-form" class="column"></div>